{"name":"Ecoreleve-core","tagline":"","body":"ecoReleve-Core\r\n==============\r\n\r\nA free and open source application.\r\n\r\n![ecoReleve](https://raw.github.com/NaturalSolutions/ecoReleve/master/Logos/logo-LABS_Core.jpg)\r\n\r\nThis Software allow access to a lot of ecoReleve's webservices.\r\n\r\n\r\nInstallation notes \r\n-----------------\r\n * Deploy on a apache or IIS server, with \"sqlserver for php\" plugin\r\n * Have sqlserver database with a eReleve base (Natural Solution's base)\r\n * Intall sqlserver native client 2012 \r\n\r\nHow to install [here] (https://github.com/NaturalSolutions/ecoReleve-Core/raw/master/Installe%20Cakephp%20sur%20IIS.pdf  \"How to\")\r\n\r\n\r\nContributing\r\n------------\r\n\r\nWant to contribute? Great!\r\n\r\nEcoRelevé is an open source project. Please help us by contributing to documentation, reporting bugs, forking the code to add features or make bug fixes or promoting us on twitter, etc.\r\n\r\nTechnical details \r\n-----------------\r\n\r\n• CakePHP Framework\r\n\r\nApplication details\r\n-----------------\r\nList of ecoReleve-core webservices routes ( many of them get a limit and offset(or skip) parameter):\r\n\r\n\t• /protocole/list parameter(s) : motcle\r\n\tReturn the list of protocols. Can be filtered by 'motcle'\r\n\t\r\n\t• /protocole/get/:id_proto\r\n\tReturn one protocole with id='id_proto'\r\n\t\r\n\t• /protocole/get parameter(s) : proto_name\r\n\tReturn one protocole with protocole name='proto_name'\r\n\t\r\n\t• /protocole/taxon/list parameter(s) : id_proto\r\n\tReturn  protocole's taxons from the protocole with id='id_proto'\r\n-----------------\r\n\t• /fieldactivity/list/autocomplete\r\n\tList of field activity used\r\n\t\r\n\t• /region/list/autocomplete\r\n\tList of field activity used\r\n\t\r\n\t• /place/list/autocomplete\r\n\tList of field activity used\r\n-----------------\t\r\n\t• /nsml/get parameter(s) : table, place, region, fieldactivity, min-date, max-date\r\n\tReturn a NSML from 'table'. It's a list of stations in a xml format from Natural Solution\r\n\t\r\n\t• /nsml/get/count parameter(s) : table\r\n\tReturn the number of station concern by the request.\r\n-----------------\t\t\r\n\t• /station/list parameter(s) : id_proto, bbox, id_stations, filters[], idate, place, region, format=geojson\r\n\tList of station for a datatable js. Based in the old version of eReleve's station on database\r\n\t\t• 'id_proto' allow to show only the stations of that protocole\r\n\t\t• 'bbox' open layer bbox\r\n\t\t• 'id_stations' a list of station's id. The stations with this ids will be shown\r\n\t\t• 'filters[]' NS grid filter parameter\r\n\t\t• 'format=geojson' geojson return parameter\r\n\t\t• 'idate' date filter parameter. idate values : 'idate=week' this week, 'idate=month' this month, 'idate=year' this year, 'idate=begindate;enddate' date format=YYYY-MM-DD\r\n\t\t• 'place' parameter for filter the locality\r\n\t\t• 'region' parameter.\r\n\t\r\n\t• /station/carto parameter(s) : bbox, zoom, cluster, filters[]\r\n\tReturn stations in a geojson\r\n\tBased in the old version of eReleve's station on database\r\n\t\t• 'zoom' open layer zoom value\r\n\t\t• 'cluster' = yes if we want clustered data\r\n\t\t• 'filters[]' NS grid filter parameter\r\n\t\r\n\t• /station/list2 parameter(s) : bbox, id_taxon, id_stations, format\r\n\tList of station for a table (with 'format'=datatablejs will return data for a datatablejs)\r\n\tBased in the new version of eReleve's station on database\r\n\t\t• 'id_taxon' allow to show only stations of that taxon\r\n\t\r\n\t• /station/carto2 parameter(s) : bbox, zoom, id_taxon, id_stations, cluster\r\n\tReturn stations in a geojson. Based in the new version of eReleve's station on database\r\n\t\r\n\t• /station/count/month\r\n\tReturn the number of station by month since the last 12 month\r\n\t\r\n\t• /station/area parameter(s) : all '/station/list' ws parameter\r\n\tList of area from station. Can be filtered\r\n\t\r\n\t• /station/locality parameter(s) : all '/station/list' ws parameter\r\n\tList of locality from station. Can be filtered\r\n\t\r\n\t• /station/import_csv parameter(s) : file\r\n\tImport of data (Stations and protocoles) from a csv\r\n\t\t• 'file' is the file to import (with form file)\r\n-----------------\t\r\n\t• /view/theme/list\r\n\tList of topic's view\r\n\tThis is sql views of stations\r\n\t\r\n\t• /view/list parameter(s) : id_theme\r\n\tList of sql views from eReleve sortable by topic with 'id_theme'\r\n\t\t\r\n\t• /view/get/:table_name parameter(s) : filters[]\r\n\tList of stations for a table from the view 'table_name' filtered or not \r\n\t\t• 'filters' contains columns value to filter result. Parameter use for NS grid\r\n\t\t\r\n\t• /view/carto/:table_name parameter(s) : filters[]\r\n\tReturn stations in a geojson from the view 'table_name' filtered or not \r\n\t\r\n\t• /view/get/:table_name/count parameter(s) : filters[] \r\n\tReturn the number stations from the view 'table_name' filtered or not \r\n\t\r\n\t• /view/get/:table_name/export parameter(s) : filters[] \r\n\tCreate pdf,gpx,csv export files based on the filters \r\n\t\r\n\t• /view/detail/:table_name\r\n\tReturn the columns and their types of the view 'table_name'\r\n-----------------\r\n\t• /user/list\r\n\tReturn the list of users\r\n\t\r\n\t• /user/login parameter(s) : login, password\r\n\tLogin webservice with 'login' and 'password' parameter\r\n\t\r\n\t• /user/fieldworker\r\n\tList of fieldworker (same as user list)\r\n\t\r\n\t• /user\r\n\tCRUD user\r\n-----------------\r\n\t• /doc\r\n\tCRUD doc\r\n\t\r\n\t• /doc/list\r\n\tReturn the list of documents\r\n-----------------\r\n\t• /taxon\r\n\tCRUD taxon\r\n\t\r\n\t• /taxon/get/:id_taxon\r\n\tReturn data of the taxon with id='id_taxon'\r\n\t\r\n\t• /taxon/list/autocomplete parameter(s) : filter\r\n\tList of taxon that begin with 'filter' for autocomplete\r\n\t\r\n\t• /taxon/list parameter(s) : filter\r\n\tList of taxon that begin with 'filter' for a table\r\n\t\r\n\t• /taxon/list/count parameter(s) : filter\r\n\tCount the number of taxon that begin with 'filter'\r\n\t\r\n\t• /vernacular/list/autocomplete parameter(s) : filter\r\n\tList of taxon with vernacular name that begin with 'filter' for autocomplete\r\n\t\r\n\t• /vernacular/list parameter(s) : filter\r\n\tList of taxon with vernacular name that begin with 'filter' for a table\r\n-----------------\r\n\t• /TViewTrx_Radio/:id \r\n\tReturn detail of a radio object 'id'\r\n\t\r\n\t• /TViewTrx_Radio/:id/carac \r\n\tList of characteristic of each fields of a radio object since now and before\r\n\t\r\n\t• /TViewTrx_Radio/list parameter(s) : filters[]\r\n\t\r\n\tList of radio object. The parameters 'filters' use for NS grid\r\n\t• /TViewTrx_Radio/list/count :filters[]\r\n\tNumber of radio. The 'filters' parameter can be used too\r\n-----------------\r\n\t• /TViewTrx_Sat/:id \r\n\tReturn detail of a sat object 'id'\r\n\t\r\n\t• /TViewTrx_Sat/:id/carac \r\n\tList of characteristic of each fields of a sat object since now and before\r\n\t\r\n\t• /TViewTrx_Sat/list parameter(s) : filters[]\r\n\tList of sat object. The parameters 'filters' use for NS grid\r\n\t\r\n\t• /TViewTrx_Sat/list/count : filters[]\r\n\tNumber of sat. The 'filters' parameter can be used too\r\n-----------------\r\n\t• /TViewIndividual/:id parameter(s) : id_protocole,date_depart, date_fin, format=geojson\r\n\tReturn detail of an Individu 'id'. Can be filtred by date and 'id_protocole'. Use 'format=geojson' parameter for get a geojson \r\n\t\r\n\t• /TViewIndividual/:id/carac \r\n\tList of characteristic of each fields of an Individu since now and before\r\n\t\r\n\t• /TViewIndividual/list parameter(s) : filters[]\r\n\tList of Individu. The parameters 'filters' use for NS grid\r\n\t\r\n\t• /TViewIndividual/list/count : filters[]\r\n\tNumber of Individu. The 'filters' parameter can be used too\r\n\t\r\n\t• /TViewIndividual/:id/protocole : date_depart, date_fin\r\n\tList of protocole from an Individu 'id'. Return also the number of individu by protocole and can be filtred by date\r\n\tDate format : YYYY-MM-DD\r\n-----------------\r\n\t• /argos/stat \r\n\tArgos stat since the last 7 days based on a Argos table\r\n\t\r\n\t• /sensor/stat\r\n\tSensor stat since the last 7 days based on a sensor table\r\n-----------------\r\n\t• /list/autocomplete parameter(s) : table_name, column_name, filter\r\n\tDynamic autocomplete. Return all value from table 'table_name' of the column 'column_name'. Can be filtered by 'filter'\r\n-----------------\r\n\tThesaurus web services \r\n\t\r\n\tformat : /thesaurus/autocomplete/'type'/list for a listing \r\n\tor /thesaurus/autocomplete/'type'/count for a count\r\n\t\r\n\tparameter : 'searcheng' for english search, 'searchfr' for french search\r\n\t\r\n\t• /thesaurus/autocomplete/distanceFromObserver/list\r\n\t\r\n\t• /thesaurus/autocomplete/typeSiteMonitired/list\r\n\t\r\n\t• /thesaurus/autocomplete/habitat/list\r\n\t\r\n\t• /thesaurus/autocomplete/microHabitat/list\r\n\t\r\n\t• /thesaurus/autocomplete/especePlant/list\r\n\t\r\n\t• /thesaurus/autocomplete/especeVertebre/list\r\n\t\r\n\t• /thesaurus/autocomplete/especeInvertebre/list\r\n\t\r\n\t• /thesaurus/autocomplete/especeChiro/list\r\n\t\r\n\t• /thesaurus/autocomplete/geomorphology/list\r\n\r\n\t• /thesaurus/autocomplete/typeSignal/list\r\n\t\r\n\t• /thesaurus/autocomplete/sex/list\r\n\t\r\n\t• /thesaurus/autocomplete/age/list\r\n\t\r\n\t• /thesaurus/autocomplete/posture/list\r\n\t\r\n\t• /thesaurus/autocomplete/maleReproductionState/list\r\n\t\r\n\t• /thesaurus/autocomplete/femaleReproductionState/list\r\n\t\r\n\t• /thesaurus/autocomplete/femaleMaturityState/list\r\n\t\r\n\t• /thesaurus/autocomplete/observationTool/list\r\n\t\r\n\t• /thesaurus/autocomplete/weather/list\r\n\t\r\n\t• /thesaurus/autocomplete/windForce/list\r\n\r\n\t• /thesaurus/autocomplete/topographie/list\r\n\r\n\t• /thesaurus/autocomplete/substrat/list\r\n\t\r\n\t• /thesaurus/autocomplete/exposure/list\r\n\r\n\t• /thesaurus/autocomplete/slope/list\r\n\t\r\n\t• /thesaurus/autocomplete/edaphicHygrotrophy/list\r\n\t\r\n\t• /thesaurus/autocomplete/pHCategories/list\r\n\t\r\n\t• /thesaurus/autocomplete/soilTexture/list\r\n\t\r\n\t• /thesaurus/autocomplete/vegetationSeries/list\r\n\t\r\n\t• /thesaurus/autocomplete/entomologicalAbundance/list\r\n\t\r\n\t• /thesaurus/autocomplete/captureMethode/list\r\n\t\r\n\t• /thesaurus/autocomplete/captureMethodeEntomo/list\r\n\t\r\n\t• /thesaurus/autocomplete/houbaraRemains/list\r\n\t\r\n\t• /thesaurus/autocomplete/deathTime/list\r\n\t\r\n\t• /thesaurus/autocomplete/reasonOfDeath/list\r\n\t\r\n\t• /thesaurus/autocomplete/typesOfTracks/list\r\n\t\r\n\t• /thesaurus/autocomplete/clutchDescription/list\r\n\t\r\n\t• /thesaurus/autocomplete/eggStatus/list\r\n\t\r\n\t• /thesaurus/autocomplete/fieldMethodsOrnithology/list\r\n\t\r\n\t• /thesaurus/autocomplete/abundanceDominance/list\r\n\t\r\n\t• /thesaurus/autocomplete/sociability/list\r\n\t\r\n\t• /thesaurus/autocomplete/growthStages/list\r\n\t\r\n\t• /thesaurus/autocomplete/countingClasses/list\r\n\t\r\n\t• /thesaurus/autocomplete/emettorShapes/list\r\n\t\r\n\t• /thesaurus/autocomplete/transmittorModel/list\r\n\t\r\n\t• /thesaurus/autocomplete/argosModel/list\r\n\t\r\n\t• /thesaurus/autocomplete/ringPosition/list\r\n\t\r\n\t• /thesaurus/autocomplete/color/list\r\n\t\r\n\t• /thesaurus/autocomplete/manufacturers/list\r\n\t\r\n\t• /thesaurus/autocomplete/origine/list\r\n\t\r\n\t• /thesaurus/autocomplete/monitoringStatus/list\r\n\t\r\n\t• /thesaurus/autocomplete/typesOfStockEvents/list\r\n\t\r\n\t• /thesaurus/autocomplete/implementationSystem/list\r\n\t\r\n\t• /thesaurus/autocomplete/batteryType/list\r\n\t\r\n\t\r\n\r\nTwitter\r\n------------\r\nPlease consider following the [@Nat_Solutions](https://twitter.com/Nat_Solutions) Twitter team for updates.\r\n\r\nCommercial Support\r\n------------\r\n\r\nWe have programs for companies that require additional level of assistance through training or commercial support, need special licensing or want additional levels of capabilities. Please visit the  [Natural Solutions](http://www.natural-solutions.eu/) Website for more information about ecoRelevé or email contact@natural-solutions.com.\r\n\r\nSponsor\r\n------------\r\n\r\nWe are grateful to H.H. Sheikh Mohamed bin Zayed Al Nahyan, Crown Prince of Abu Dhabi and Chairman of the International Fund for Houbara Conservation (IFHC) and  H.E. Mohammed Al Bowardi Deputy Chairman of IFHC for their support\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}